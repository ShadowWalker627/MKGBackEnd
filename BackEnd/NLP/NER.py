# -*- coding: utf-8 -*-
from BackEnd.NLP import CUT

import jieba
import jieba.posseg as pseg

# jieba.load_userdict("userdict.txt")

nerDit = {
    "PM": ('螺纹', '三角形螺纹', '矩形螺纹', '梯形螺纹', '锯齿形螺纹', '管螺纹', '粗牙普通螺纹', '细牙普通螺纹', '管联接用细牙普通螺纹',
           '非螺纹密封的55°圆柱管螺纹', '用螺纹密封的55°圆柱管螺纹', '60°圆锥管螺纹', '米制锥螺纹', '圆弧螺纹', '普通平键', '导向平键',
           '薄型平键', '滑键联接', '半圆键', '普通楔键', '钩头楔键', '切向键', '圆头普通平键(A型)', '平头普通平键(B型)', '单圆头普通平键(C型)',
           '普通切向键', '强力切向键', '花键', '花键联接', '矩形花键', '渐开线花键', '钢铆钉', '铜铆钉', '铝铆钉', '半圆头铆钉', '沉头铆钉',
           '半圆头钢铆钉', '沉头钢铆钉', '半沉头铆钉', '开口型扁圆头铆钉', '标牌铆钉', '熔化焊', '气焊', '电弧焊', '手工电弧焊', '埋弧焊',
           '氩弧焊', '二氧化碳气体保护焊', '真空电子束焊', '电渣焊', '对焊', '点焊', '缝焊', '钎焊', '碳钢焊条', '低合金钢焊条', '不锈钢焊条',
           '堆焊焊条', '铸铁焊条', 'E4300', 'E4301', 'E5001', 'E4303', 'E5003', 'E4311', 'E5011', 'E4313', 'E4353', 'E5015', 'E4316',
           'E4315', 'E5016', 'E4320', 'E4323', 'E4324', 'E5024', 'E4327', 'E5027', 'E5028', 'E5015-A1', 'E5500-B1', 'E5503-B1',
           'E5515-B1', 'E5515-B2', 'E5500-B2-V', 'E5515-B2-V', 'E5515-B2-VNb', 'E5515-B2-VW', '有机胶粘剂', '天然胶粘剂', '动物胶',
           '植物胶', '合成胶粘剂', '热塑性树脂型胶粘剂', '热固性树脂型胶粘剂', '橡胶型树脂型胶粘剂', '混合型胶粘剂', '无机胶粘剂', '磷酸盐型',
           '磷酸盐型胶粘剂', '硅酸盐型', '硅酸盐型胶粘剂', '硼酸盐型', '硼酸盐型胶粘剂', '结构型胶粘剂', '溶剂型胶粘剂', '反应型胶粘剂',
           '热塑性胶粘剂', '溶液型胶粘剂', '乳液型胶粘剂', '膏糊型胶粘剂', '粉末型胶粘剂', '环氧树脂胶粘剂', '酚醛树脂胶粘剂', '丙烯酸酯胶粘剂',
           '聚氨酯胶粘剂', '杂环高分子胶粘剂', '不饱和聚酯树脂胶粘剂', '螺栓联接', '双头螺柱联接', '螺钉联接', '紧定螺钉联接', '对顶螺母',
           '弹簧垫圈', '自锁螺母', '开口销与六角开槽螺母', '止动垫圈', '串联铁丝', '圆柱管螺纹', '左旋螺纹', '右旋螺纹', '单线螺纹', '粗牙螺纹',
           '细牙螺纹', '普通螺纹', '公制螺纹', '英制螺纹', '圆锥管螺纹', '英制细牙螺纹', '传动螺纹', '标准螺纹', '内螺纹', '外螺纹',
           '螺栓', '橡胶垫', '螺母', '垫圈', '垫片', '弹簧', '螺杆', ' 双头螺柱', ' 对顶螺母', '联接螺纹', '传动螺纹', '英制螺纹', '公制螺纹',
           '粗牙螺纹', '细牙螺纹', '圆柱管螺纹', '圆锥管螺纹', '英制细牙螺纹', '螺旋副', '单线螺纹', '多线螺纹', ' 旋转螺母', ' 矩形螺旋副',
           '螺纹升角', '松联接', '紧联接', '弹簧垫圈', '六角开槽螺母', '自锁螺母', '止动垫圈', '串联铁丝', '螺钉组', ' 串联钢丝', '螺栓组联接',
           '单个螺栓联接', '钢制螺栓', '石棉垫片', '胶垫片', '金属垫片', '皮革垫片', '铜皮', '铰制孔螺栓联接', '普通螺栓联接', '螺栓组联接',
           '环槽螺母', ' 传力螺旋', '传导螺旋', '调整螺旋', '铸铁螺母', '青铜螺母', '型面联接', '键联接', '平键联接', '半圆键联接', '楔键联接',
           '切向键联接', '普通平键', '导向平键', '薄型平键', '滑键', '静联接', '动联接', '轴端联接', '空心轴', '起键螺孔', '半圆键',
           '钩头楔键', '普通楔键', '矩形花键', '花键联接', '渐开线花键', '圆柱销', '圆锥销', '槽销', '开口销', '搭接缝', '不可拆联接', '铆钉联接',
           '铆接', '铆钉', '强固铆缝', '强密铆缝', '紧密铆缝', '正交接头', '搭接接头', '对接接头', '角焊缝', '搭接焊缝', '无机黏结剂', '有机黏结剂',
           '黏结剂', '圆锥螺纹', '圆柱螺纹', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
    ),
    "MA": ('金属', '塑料', '橡胶', '玻璃', '铸铁', '碳素钢', '合金钢', '钢', '青铜', '铜', '紫铜', '白铜', '黄铜', '电解铜', '无氧铜',
           '镍黄铜', '锰黄铜', '低锌黄铜', '铝青铜', '硅青铜', '高强度镀青铜', '灰口铸铁', '球墨铸铁', '钛','钛及其合金', '工业纯钛',
           '铝', '铝及其合金', '硬合金铝', '工业纯铝', '二十一号防锈铝', '防锈铝', '不锈钢', '中碳钢', '低碳钢', '低合金钢', '优质碳素钢',
           '磷酸盐', '硅酸盐', '无机氧化铜-磷酸胶', '高分子材料', '树脂', '酚醛树脂', '环氧树脂', '有机胶', '酚醛-缩醛-有机硅胶', '环氧-酚醛胶',
           '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''
    ),
    "STR": ('挤压强度', '剪切强度', '轴向载荷', ' 静载荷', '动载荷', ' ', ''),
    "TO": ('测力矩扳手', '定力矩扳手', '', '', '', '', ''),
    "PRC": ('刀具', '工件', '砂轮', '回火', '正火', '退火', '淬火', '冷作硬化', '端铣刀', '盘铣刀', '插刀', '拉刀', '', '', '', '', '', '', '', '', '', '', '', '', '',),
    "PARAM": ('公称直径', '最大直径', '最小直径', '导程', ' 牙型角', ' 大径', '小径', '螺距', '线数', '接触高度', '螺纹轴线', '传动效率',
              '径向高度', '牙侧角', '摩擦因数', '法向反力', '水平推力', '摩擦力', '摩擦角', '阻力', '驱动力', '总反力', '切向力', '力矩',
              '法向力', ' 联接精度', '屈服极限', '结构型式', '最大许用值', '摩擦力矩', '拧紧力矩', '工作载荷', ' 拉应力', '扭转应力',
              '螺栓危险截面', ' 计算应力', '第四强度理论', '强度条件', '受力形式', '弹性变形', '总拉力', ' 轴向工作载荷', '工作拉力', '预紧力',
              '残余预紧力', '总拉伸载荷', '工作载荷', '伸长量', '总的伸长量', ' 压缩量', '总压缩量', '总伸长量', '总的压缩量', '相对刚度',
              '拉伸强度条件', '可靠系数', '摩擦因数', '横向工作载荷', '横向载荷', ' 拉伸刚度', '剪切刚度', '横向总载荷', '挤压力', '横向工作剪切力',
              '最大摩擦力', '防滑系数', '翻转力矩', '弯曲应力', '疲劳强度', '应力集中', '残余应力', '失效形式', ' 螺纹中径', '螺纹圈数',
              '许用压强', '引用系数', '螺纹高度', '工作高度', '阻力矩', '临界载荷', '螺杆长细比', '长度系数', '螺杆危险截面', '惯性半径',
              '惯性矩', '弹性模量', '双向转矩', '单方向轴向力', '抗拉强度', '工作长度', '许用挤压应力', '许用压强', '齿侧面', '齿形',
              '铆钉直径', '钉孔直径', '板宽', '铆钉数目', '许用拉应力', '许用切应力', '静载许用应力', '载荷应力', '压应力', '焊缝的长度',
              '降低因数', '许用应力', '许用压应力', '最低抗拉强度', '胶接强度', '耐热性', '耐介质性', '耐老化性', '温度', '压力', '保持时间',
              '涂布性', '流动性', '有效储存期', '防锈', '到点', '黏结强度', '力学性能', '胶层厚度', '固化情况', '工艺水平', '环境温度', '载荷性质',
              '工作时间', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
    )
}

def handleSentence(senStr):
    seg_list = CUT.jiebaCut(senStr)
    se = ''
    for i in seg_list:
        se += i + ' '

    words = pseg.cut(se)

    res = ''
    nerPM = []
    nerMA = []
    nerSTR = []
    nerTO = []
    nerPRC = []
    nerPARAM = []

    for word, flag in words:
        if (flag == 'n'):
            res += word + ' '
            if(word in nerDit['PM'] and (not word + '-PM' in nerPM)):
                nerPM.append(word + '-PM')
            elif(word in nerDit['MA'] and (not word + '-MA' in nerMA)):
                nerMA.append(word + '-MA')
            elif (word in nerDit['STR'] and (not word + '-STR' in nerSTR)):
                nerSTR.append(word + '-STR')
            elif (word in nerDit['TO'] and (not word + '-TO' in nerTO)):
                nerTO.append(word + '-TO')
            elif (word in nerDit['PRC'] and (not word + '-PRC' in nerPRC)):
                nerPRC.append(word + '-PRC')
            elif (word in nerDit['PARAM'] and (not word + '-PARAM' in nerPARAM)):
                nerPARAM.append(word + '-PARAM')
    return [
        {
            'type': '零件名称',
            'array': nerPM
        },
        {
            'type': '材料',
            'array': nerMA
        },
        {
            'type': '强度',
            'array': nerSTR
        },
        {
            'type': '工具',
            'array': nerTO
        },
        {
            'type': '加工',
            'array': nerPRC
        },
        {
            'type': ' 参数',
            'array': nerPARAM
        }
    ]

def nerForRE(senStr):
    seg_list = jieba.cut(senStr)
    se = ''
    for i in seg_list:
        se += i + ' '

    words = pseg.cut(se)

    res = ''
    nerPM = []
    nerMA = []
    nerSTR = []
    nerTO = []
    nerPRC = []
    nerPARAM = []
    allNer = []

    for word, flag in words:
        if (flag == 'n'):
            res += word + ' '
            if (word in nerDit['PM'] and (not word + '-PM' in nerPM)):
                nerPM.append(word + '-PM')
                allNer.append(word)
            elif (word in nerDit['MA'] and (not word + '-MA' in nerMA)):
                nerMA.append(word + '-MA')
                allNer.append(word)
            elif (word in nerDit['STR'] and (not word + '-STR' in nerSTR)):
                nerSTR.append(word + '-STR')
                allNer.append(word)
            elif (word in nerDit['TO'] and (not word + '-TO' in nerTO)):
                nerTO.append(word + '-TO')
                allNer.append(word)
            elif (word in nerDit['PRC'] and (not word + '-PRC' in nerPRC)):
                nerPRC.append(word + '-PRC')
                allNer.append(word)
            elif (word in nerDit['PARAM'] and (not word + '-PARAM' in nerPARAM)):
                nerPARAM.append(word + '-PARAM')
                allNer.append(word)
    return  allNer